{
    "type": "Ext.Container",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "cls": [
            "con-bgcls"
        ],
        "designer|userAlias": "pubdetail",
        "designer|userClassName": "publication.Detail",
        "id": "pubdetail",
        "itemId": "pubdetail",
        "scrollable": "vertical",
        "style": "-webkit-user-select:text !important;",
        "title": "Cup of News"
    },
    "designerId": "aab88198-2103-4ac0-99ff-a573407c9cd0",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "detailData",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "title",
            "type": "string"
        }
    ],
    "cn": [
        {
            "type": "fixedfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "initialize",
                "implHandler": [
                    "this.callParent();",
                    ""
                ]
            },
            "designerId": "4f817e3b-0352-4f33-beac-afb8e94e9e71"
        },
        {
            "type": "Ext.XTemplate",
            "reference": {
                "name": "tpl",
                "type": "object"
            },
            "codeClass": null,
            "userConfig": {
                "designer|displayName": "tpl",
                "implHandler": [
                    "",
                    "<div class=\"newsdetail-lastupdated\" style=\"-webkit-user-select:text !important;\">",
                    "    <B style=\"",
                    "    color: #FFFFFF;",
                    "\">Last updated : </B>{[this.getPubDateInHrs(values.pubDate)]}",
                    "</div>",
                    "<div class=\"newsdetail-title\" style=\"-webkit-user-select:text !important;\">{title}</div>",
                    "<div class=\"newsdetail-description\" id=\"newsdetail_description\" style=\"-webkit-user-select:text !important;\"> {[this.formatDesc(values.description)]}</div>",
                    "",
                    "<div style=\"clear:both;\"></div>",
                    "<div style=\"float:right;\">",
                    "    <div style=\"margin-right:48px;\">",
                    "    <img src=\"resources/project-images/google.png\" class=\"shareGoogle\"/>",
                    "    </div>",
                    "    ",
                    "</div>",
                    "<div style=\"float:right;\">",
                    "   ",
                    "    <div style=\"margin-right:5px;\">",
                    "    <img src=\"resources/project-images/twitter.png\" class=\"shareTwitter\"/>",
                    "    </div>",
                    "    ",
                    "</div>",
                    "<div style=\"float:right;\">",
                    "    ",
                    "    ",
                    "    <div style=\"margin-right:5px;\" >",
                    "    <img src=\"resources/project-images/facebook.png\" class=\"shareFacebook\"/>",
                    "    </div>",
                    "</div>",
                    "    ",
                    "",
                    "",
                    ""
                ]
            },
            "designerId": "02c89d3e-be60-41d9-bf99-dd86e0ab65e4",
            "cn": [
                {
                    "type": "templatefunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|params": [
                            "pubDate"
                        ],
                        "fn": "getPubDateInHrs",
                        "implHandler": [
                            "var returnValue = '';",
                            "var newsPubDate;",
                            "",
                            "if(pubDate.indexOf('0530') < 0){",
                            "",
                            "    newsPubDate = pubDate + '+0530';",
                            "}else{",
                            "",
                            "   newsPubDate = pubDate;",
                            "}",
                            "",
                            "",
                            "var hrs = (Math.abs((new Date()).valueOf() - new Date(newsPubDate).valueOf() )) / 1000/60/60;",
                            "",
                            "    if(!Ext.isEmpty(hrs)){",
                            "",
                            "      if(Math.round(hrs) < 24){",
                            "           returnValue = Math.round(hrs) + ' hours ago';",
                            " ",
                            "        }else{",
                            "            returnValue = Math.round((hrs)/24) + ' days ago';",
                            " ",
                            "        }",
                            "    }else{",
                            "",
                            "        returnValue = '';",
                            "    }",
                            "",
                            "return returnValue;"
                        ]
                    },
                    "designerId": "4effd040-3ba7-48a7-bd73-5fe1c76396c2"
                },
                {
                    "type": "templatefunction",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|displayName": "formatDesc",
                        "designer|params": [
                            "desc"
                        ],
                        "fn": "formatDesc",
                        "implHandler": [
                            "",
                            "var touchdevice = ('ontouchstart' in window) ? true : false;",
                            "var app = document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1;",
                            "var parser=new DOMParser();",
                            "var htmlDoc=parser.parseFromString(desc, \"text/xml\");",
                            "var newstr=desc;",
                            "var htmlDoc1=htmlDoc.getElementsByTagName('a');",
                            "var ancTag=htmlDoc1[0];",
                            "if(ancTag){",
                            "    var hreftext=(ancTag.getAttribute('href'));",
                            "     var returnDesc=\"\";",
                            "if(app){",
                            "  returnDesc='javascript:window.open(\"'+hreftext+'\", \"_blank\", \"location=no\")';",
                            "}",
                            "else{",
                            " returnDesc='javascript:window.open(\"'+hreftext+'\", \"_blank\")';",
                            "",
                            "}",
                            "",
                            "if(desc.indexOf(hreftext) > 0){",
                            "    newstr=desc.replace(hreftext,returnDesc);",
                            "}",
                            "",
                            "}else{",
                            "",
                            "}",
                            "",
                            "",
                            "",
                            "",
                            " return newstr;",
                            "",
                            ""
                        ]
                    },
                    "designerId": "efbd772a-9f31-4e39-9a3e-5e176c361578"
                }
            ]
        },
        {
            "type": "delegateeventbinding",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|targetType": "Ext.Container",
                "fn": "onContainerPainted",
                "implHandler": [
                    "",
                    "",
                    "",
                    "/*",
                    "element.dom.addEventListener('mouseup', function(e){",
                    "     Ext.Viewport.remove(panel);",
                    "",
                    "                                                     if (window.getSelection) {",
                    "",
                    "            var val=(window.getSelection().toString());",
                    "                                                         var text=(window.getSelection().toString());",
                    "",
                    "                                                                                                                                                            if (window.getSelection) {",
                    "                                                                              if (window.getSelection().empty) {  // Chrome",
                    "                                                                                window.getSelection().empty();",
                    "                                                                              } else if (window.getSelection().removeAllRanges) {  // Firefox",
                    "                                                                                window.getSelection().removeAllRanges();",
                    "                                                                              }",
                    "                                                                            } else if (document.selection) {  // IE?",
                    "                                                                              document.selection.empty();",
                    "                                                                            }",
                    "                                                         if(val !== \"\"){",
                    "                                                              Ext.Viewport.remove(panel);",
                    "                                                             panel=Ext.create('Ext.Panel',{",
                    "                                                               itemId:'floatingPanel',",
                    "                                                               cls:'chartfloatingpanel-cls',",
                    "                                                               top:e.y,",
                    "                                                               left:e.x-100,",
                    "                                                               width: 180,",
                    "                                                               minHeight: 50,",
                    "                                                                 items:[",
                    "                                                                     {",
                    "                                                                         xtype:\"button\",",
                    "",
                    "                                                                         text:\"Add to Dictionary\",",
                    "                                                                         dock:\"bottom\",",
                    "                                                                         handler : function(){",
                    "",
                    "                                                                             Ext.Viewport.remove(panel);",
                    "                                                                            var DictonaryStore= Ext.getStore(\"Dictonary\");",
                    "                                                                var test= Ext.encode(Ext.getStore('Dictonary').getProxy().getReader().rawData);",
                    "",
                    "                                                                 if(test === 'null'){",
                    "                                                                 var recordjson=[];",
                    "",
                    "                                                                 var json={\"id\":new Date().getTime(),\"word\":text};",
                    "                                                                 recordjson.push(json);",
                    "",
                    "                                                                  DictonaryStore.setData(recordjson);",
                    "",
                    "                                                                                window.localStorage.setItem(\"DictionaryArray\",JSON.stringify(recordjson));",
                    "",
                    "",
                    "                                                                     }else{",
                    "                                                                        var recordjson=JSON.parse(test);",
                    "                                                                          var json={\"id\":new Date().getTime(),\"word\":text};",
                    "                                                                 recordjson.push(json);",
                    "",
                    "                                                                         DictonaryStore.setData(recordjson);",
                    "",
                    "                                                                                window.localStorage.setItem(\"DictionaryArray\",JSON.stringify(recordjson));",
                    "",
                    "",
                    "                                                                              }",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "",
                    "                                                                         }",
                    "",
                    "                                                                     }",
                    "                                                                 ]",
                    "",
                    "                                                           });",
                    "                                                             panel.setHtml('<div style=\"text-align:justify;\">'+val+'</div>');",
                    "                                                           Ext.Viewport.add(panel);",
                    "                                                       }",
                    "                                                     }",
                    "                                                      });*/",
                    "",
                    "var facebookBtn = Ext.select('.shareFacebook').elements[0];",
                    "var twitterBtn = Ext.select('.shareTwitter').elements[0];",
                    "var googleBtn = Ext.select('.shareGoogle').elements[0];",
                    "var touchdevice = ('ontouchstart' in window) ? true : false;",
                    "var app = document.URL.indexOf( 'http://' ) === -1 && document.URL.indexOf( 'https://' ) === -1;",
                    "",
                    "",
                    "var audioPlay=Ext.getCmp(\"audioPlay\");",
                    "audioPlay.setHidden(false);",
                    "var shareText=this.getData().title;",
                    "",
                    "var node = document.getElementById('newsdetail_description'),",
                    "",
                    "htmlContent = node.innerHTML;",
                    "var shareDesc=htmlContent;",
                    "textContent = node.textContent;",
                    "shareDesc=textContent;",
                    "",
                    "var url=Ext.getCmp(\"gotowebsiteBtn\");",
                    "",
                    "var shareLink=url.siteUrl;",
                    "Ext.get(facebookBtn).on('tap',function(e,a){",
                    "    //(new Media('http://translate.google.com/translate_tts?ie=UTF-8&tl=en&q=i%20have%20do%20this')).play();",
                    "    //var audio = new Audio();",
                    "    //audio.src='http://translate.google.com/translate_tts?ie=UTF-8&tl=en&q=elephant';",
                    "    //audio.play();",
                    "    if(app){",
                    "         if(window.plugins.socialsharing){",
                    "        window.plugins.socialsharing.shareViaFacebook('', null /* img */,shareLink, function(res) {",
                    "                                                                if(res == false){",
                    "",
                    "                                                                }else{",
                    "",
                    "                                                                }",
                    "                                                                }, function(errormsg){});",
                    "",
                    "",
                    "         }",
                    "",
                    "    }else{",
                    "       window.open('https://www.facebook.com/sharer.php?' +",
                    "        'u=' + encodeURIComponent(shareLink) +",
                    "        '&t=' + encodeURIComponent(shareText));",
                    "    }",
                    "",
                    "",
                    "});",
                    "Ext.get(twitterBtn).on('tap',function(e,a){",
                    "     if(app){",
                    "         if(window.plugins.socialsharing){",
                    "         window.plugins.socialsharing.shareViaTwitter('', null /* img */,shareLink,function(res) {",
                    "                                                               if(res == false){",
                    "",
                    "                                                               }else{",
                    "",
                    "                                                               }",
                    "                                                               }, function(errormsg){",
                    "                                                               //navigator.notification.alert(errormsg);",
                    "                                                               });",
                    "       }",
                    "     }else{",
                    "         window.open('https://twitter.com/intent/tweet?'+",
                    "        'original_referer=' + encodeURIComponent(shareLink) +",
                    "        '&url=' + encodeURIComponent(shareLink) +",
                    "        '&text=' + encodeURIComponent(shareText));",
                    "     }",
                    "",
                    "   });",
                    "Ext.get(googleBtn).on('tap',function(e,a){",
                    "",
                    "     if(app){",
                    "         if(window.plugins.socialsharing){",
                    "         /*window.plugins.socialsharing.shareViaEmail(",
                    "                                                             shareLink,",
                    "                                                             'CON',",
                    "                                                             null, // TO: must be null or an array",
                    "                                                             null, // CC: must be null or an array",
                    "                                                             null, // BCC: must be null or an array",
                    "                                                             null,// FILES: can be null, a string, or an arra",
                    "                                                             null, // called when sharing worked, but also when the user cancelled sharing via email (I've found no way to detect the difference)",
                    "                                                             null // called when sh*t hits the fan",
                    "                                                             );*/",
                    "",
                    "             var ref = window.open('https://plusone.google.com/_/+1/confirm?' +",
                    "        'url=' + encodeURIComponent(shareText), '_blank', 'location=no');",
                    "             ref.addEventListener('loadstart', function(event) { if(((event.url).indexOf('https://plus.google.com/app/basic/stream')) >= 0){ref.close();} });",
                    "",
                    "",
                    "        }",
                    "     }else{",
                    "         window.open('https://plusone.google.com/_/+1/confirm?' +",
                    "        'url=' + encodeURIComponent(shareText));",
                    "     }",
                    "",
                    "   });",
                    ""
                ],
                "name": "painted"
            },
            "designerId": "714db913-d9f1-404a-8c56-8cb1dd57b4fe"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "addToStore",
                "implHandler": [
                    "alert(\"ok\");"
                ]
            },
            "designerId": "f3172161-0eb9-4fb5-831a-d2646ff43060"
        }
    ]
}