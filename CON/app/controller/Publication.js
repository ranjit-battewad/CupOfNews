/*
 * File: app/controller/Publication.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CON.controller.Publication', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            publicationview: 'dataview#mydataview',
            categorysegbtns: 'segmentedbutton#categorysegbtns',
            publicationCatNewsList: 'list#catnewslist'
        },

        control: {
            "dataview#mydataview": {
                itemtap: 'onPublicationItemTap'
            },
            "segmentedbutton#categorysegbtns": {
                toggle: 'onSegmentedbuttonToggle'
            },
            "list#catnewslist": {
                itemtap: 'onListItemTap'
            },
            "container#pubdetail": {
                activate: 'onPublicdetailContainerPainted'
            }
        }
    },

    onPublicationItemTap: function(dataview, index, target, record, e, eOpts) {

        this.handlePublicationItemTap(record);
    },

    onSegmentedbuttonToggle: function(segmentedbutton, button, isPressed, eOpts) {
        if(isPressed){



        var pub=(button.config.pubCategData);
             CON.utils.Global.api.currentPubid=parseInt(pub.publicationId );
                   CON.utils.Global.api.currentCatid=parseInt(pub.categoryId );
         var feedUrl = button.config.pubCategData.feedurl;

         this.feedStore = Ext.create('CON.store.NewsFeed');

        	this.feedStore.setParams({'feedurl':feedUrl});
            button.up('list').setStore(this.feedStore);
        	this.feedStore.load({
        		callback:function(records){

        		},scope: this
        	});


        }

    },

    onListItemTap: function(dataview, index, target, record, e, eOpts) {
        var alldat=(record.getData());

        Ext.data.JsonP.request({

                    url: 'http://aceconapi.walkingtree.in/toprest/trackviews',
                    params: {
                        title : alldat.title ,
                        link:alldat.link,
                        description:alldat.description,
                        guid:alldat.guid ,
                        catId:CON.utils.Global.api.currentCatid,
                        pubId:CON.utils.Global.api.currentPubid,
                        pubDate:alldat.pubDate
                    },

                    success: function(response) {
                        Ext.Viewport.setMasked(false);
                    },
                    failure: function(response) {
                        Ext.Viewport.setMasked(false);
                        //form.up('homepage').setActiveItem(1);
                    }
                });

        var newsDetailView = Ext.create('CON.view.publication.Detail',{});

        newsDetailView.setData(record.getData());

        CON.app.getController("Main").pushView(newsDetailView, CON.title);

    },

    onPublicdetailContainerPainted: function(newActiveItem, container, oldActiveItem, eOpts) {
        //alert("coming again");

    },

    handlePublicationItemTap: function(record) {
        var categoryPub=Ext.getStore("CategoryPublications");
        //alert(CON.utils.Global.api.currentPubid);

        CON.utils.Global.api.currentPubcode=record.get("code");
        CON.utils.Global.api.currentPubid=parseInt(record.get("id"));
        //alert(CON.utils.Global.api.currentPubid);

        categoryPub.clearFilter();
                categoryPub.filterBy(function(rec) {

                                  return  (parseInt(rec.get("publicationId")) == parseInt(record.get("id")) && (parseInt(rec.get("isActive")) == 1));
                 });
                var recordItems = categoryPub.data.items;
                var newrecords=[];
                for(var i=categoryPub.getCount()-1; i>=0;i--){

                               newrecords.push(recordItems[i].getData());
                }

         var catNewsListView = Ext.create('CON.view.publication.CatNewsList',{

            catData : newrecords,
             title:record.get("name")
         });

        CON.app.getController("Main").pushView(catNewsListView, CON.title);


    }

});