/*
 * File: app/controller/TopNews.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('CON.controller.TopNews', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            topViewList: 'list#catnewslist1'
        },

        control: {
            "dataview#selectdataview": {
                itemtap: 'onSelectDataviewItemTap'
            },
            "dataview#mydataview3": {
                itemtap: 'onDataviewItemTap'
            },
            "segmentedbutton#topviewsseg": {
                toggle: 'oncatSegmentedbuttonToggle'
            },
            "list#catnewslist1": {
                itemtap: 'onTopListItemTap'
            }
        }
    },

    onSelectDataviewItemTap: function(dataview, index, target, record, e, eOpts) {

        var pubid=(record.get("id"));

        var me=this;
        Ext.Viewport.setMasked({"xtype":"loadmask","title":"Loading..."});

        var topViewStore=Ext.getStore("TopView");
        topViewStore.load(function(record11){
            Ext.Viewport.setMasked(false);


          topViewStore.clearFilter();
                topViewStore.filterBy(function(rec) {
                    //alert(parseInt(rec.get("categoryId")) +"=="+ parseInt(catid));

                               //alert(parseInt(rec.get("categoryId")) == parseInt(catid));
                                  return  (parseInt(rec.get("pubId")) == parseInt(pubid) && (parseInt(rec.get("isActive")) == 1));
                 });



        var recordItems = topViewStore.data.items;
                var newrecords=[];
                for(var i=topViewStore.getCount()-1; i>=0;i--){

                               newrecords.push(recordItems[i].getData());
                }
        var result = me.GroupBy(newrecords,"catId");

             Ext.getStore("TopViewsList").setData([]);


         var catNewsListView = Ext.create('CON.view.topViewList',{

            catData : result,
             title:record.get("name")
         });

        CON.app.getController("Main").pushView(catNewsListView, CON.title);



        });

    },

    onDataviewItemTap: function(dataview, index, target, record, e, eOpts) {
        if(index == 0){
            var selctpub = Ext.create('CON.view.SelectPublication',{"title":"Choose Publication"});


        CON.app.getController("Main").pushView(selctpub, CON.title);

        }


    },

    oncatSegmentedbuttonToggle: function(segmentedbutton, button, isPressed, eOpts) {
        if(isPressed){


            var category=(button.config.pubCategData);
            Ext.getStore("TopViewsList").setData(category);
            //this.getTopViewList().setData(category);

        }

    },

    onTopListItemTap: function(dataview, index, target, record, e, eOpts) {
        var alldat=(record.getData());
        Ext.data.JsonP.request({

                    url: 'http://aceconapi.walkingtree.in/toprest/trackviews',
                    params: {
                        title : alldat.title ,
                        link:alldat.link,
                        description:alldat.description,
                        guid:alldat.guid ,
                        catId:alldat.catId,
                        pubId:alldat.pubId,
                        pubDate:alldat.pubDate
                    },

                    success: function(response) {
                        Ext.Viewport.setMasked(false);
                    },
                    failure: function(response) {
                        Ext.Viewport.setMasked(false);
                        //form.up('homepage').setActiveItem(1);
                    }
                });


        var newsDetailView = Ext.create('CON.view.publication.Detail',{});

        newsDetailView.setData(record.getData());

        CON.app.getController("Main").pushView(newsDetailView, CON.title);

    },

    GroupBy: function(myjson, attr) {
        var sum ={};

            myjson.forEach( function(obj){
                var catid=obj[attr];
                   var catStore=Ext.getStore("CategoryPublications");
                var catrec=catStore.find("categoryId",catid);
                var findrec=catStore.getAt(catrec);
                var name=findrec.get("catName");
               if ( typeof sum[name] == 'undefined') {

                 sum[name]=[];
                   sum[name].push(obj);
                }
               else {
                 sum[name].push(obj);
               }
            });
            return sum;
    }

});